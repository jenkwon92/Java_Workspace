package use;
import car.Taxi; //사용하고자하는 택시임포트
import car.Truck; //사용하고자하는 트럭임포트
import car.Bus; //사용하고자하는 버스임포트

//만일 위에처럼 일일이 명시하는게 귀찮은 경우 한꺼번에 가능
//import car.*; //*대상이 될수있는것은 패키지명이 아니라 클래스명임 
					//참고로 현업에서는 *을 잘 쓰지않음
					// import에서 다루고자하는 기술이 무엇인지 빨리 해석이힘듬
					// 따로따로해주는 것이 좋음

class UseCar{
	public static void main(String[] args){
		//만일 택시를 사용하고 싶을때 부모인 car클래스를 메모리에 별도로 new해줘야할까?
		//x 자식을 new하면 js와 같이 부모는 자동으로 인스턴스가 생성됨
	Taxi t = new Taxi(); //택시의 인스턴스 생성. 얼핏보기에는 택시만 생성될 것같지만
								//택시보다 앞선 부모인 Car가 존재해야 택시도 존재할 수 있기떄문에 
								// js시절의 원리가 그래로 적용되어 car인스터스도 생성
	t.pass(); //택시 메서드 호출
	
	//택시 클래스 코드안에는 없지만 car클래스가 보유한 변수가 메서드 호출
	//만일 호출이 되면 car인스턴스가 생성된것 증명
	t.move(); //분면 move() 메서드는 택시에 없는데도 이게 호출된다면 택시가 부모님꺼를 맘대로 접근
					//js에서 상속을 이미 공부함

	//UseCar 클래스다시 실행
	//물론 Car 컴파일
	}
}
