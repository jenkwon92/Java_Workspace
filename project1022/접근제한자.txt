접근제한자
: 클래스 내에 작성되는 변수는 지금까지는 색상,가격 이런 기본적인 연습용 데이터였지만
사실상 자바 개발자가 현업에서 다루는 업무는 주로 계좌, 고객정보 들 상당히 민감한 데이터를 다룹니다
따라서 클래스 내에 있는 변수는 데이터이므로 보호 받아야합니다.
자바에서는 이렇게 데이터를 보호할 수 있는 보안 장치를 지원해 주는데 이를 가리켜 접근제한자라 합니다.


접근제한자의 종류
약한것 순으로 나열하면
public(보안도 아님 그냥 공개)
protected(상속관계에 있는 부모자식 클래스 끼리만 접근 가능)
default(같은 패키지 안에 있는 클래스 끼리만 접근 가능, 상속받았다할지라도 같은 패키지가 아니라면 접근 불가)
private(같은 클래스내의 멤버끼리만 접근 가능 ex>멤버메서드가 멤버변수에 접근)

public<protected<default<private
이렇게 적으면 마치 개발자가 개발할 때 보안을 철저히 따져가며 클래스를 만들거 같지만
사실 private 을 많이 쓰게됨

접근제한자는 자바에서 보안처리하기 위한 방법을 제공
private활용도가 높음
사실상 클래스내에 선언되는 변수는 모두 private 하는데 많으
데이터는 보호되어야하기때문
이 내부장치를 외부에서 제어하려면 접근 방법을 제공해줘야하는데 그게 바로 setter/getter
데이터를 private으로 보호하고 오직 getter,setter를 통해서 데이터를 간접 제어할 수 있도록
클래스를 정의하는 기법을 가리켜 객체 지향 oop에서는 은닉화(=EnCaptualataion) 캡술화라고함

